<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__socket_exception_8hpp_source" xml:lang="en-US">
<title>SocketException.hpp</title>
<indexterm><primary>src/runtime/SocketException.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__socket_exception_8hpp_source_1l00001"/>00001 
<anchor xml:id="__socket_exception_8hpp_source_1l00014"/>00014 <emphasis role="preprocessor">#ifndef&#32;SOCKET_EXCEPTION_HPP</emphasis>
<anchor xml:id="__socket_exception_8hpp_source_1l00015"/>00015 <emphasis role="preprocessor">#define&#32;SOCKET_EXCEPTION_HPP</emphasis>
<anchor xml:id="__socket_exception_8hpp_source_1l00016"/>00016 
<anchor xml:id="__socket_exception_8hpp_source_1l00017"/>00017 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__runtime_exception_8hpp">RuntimeException.hpp</link>&quot;</emphasis>
<anchor xml:id="__socket_exception_8hpp_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&lt;jpl/utils/ErrorUtils.hpp&gt;</emphasis>
<anchor xml:id="__socket_exception_8hpp_source_1l00019"/>00019 
<anchor xml:id="__socket_exception_8hpp_source_1l00020"/>00020 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacejpl">jpl</link>{
<anchor xml:id="__socket_exception_8hpp_source_1l00021"/>00021 
<anchor xml:id="__socket_exception_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>_exception{
<anchor xml:id="__socket_exception_8hpp_source_1l00023"/>00023 
<anchor xml:id="__socket_exception_8hpp_source_1l00024"/><link linkend="_classjpl_1_1__exception_1_1_socket_exception">00024</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classjpl_1_1__exception_1_1_socket_exception">SocketException</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classjpl_1_1__exception_1_1_runtime_exception">RuntimeException</link>{
<anchor xml:id="__socket_exception_8hpp_source_1l00025"/>00025 
<anchor xml:id="__socket_exception_8hpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
<anchor xml:id="__socket_exception_8hpp_source_1l00027"/>00027 
<anchor xml:id="__socket_exception_8hpp_source_1l00031"/><link linkend="_classjpl_1_1__exception_1_1_socket_exception_1adc56852307aceab48ef989e21bf9325c">00031</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1adc56852307aceab48ef989e21bf9325c">error_code</link>;
<anchor xml:id="__socket_exception_8hpp_source_1l00035"/><link linkend="_classjpl_1_1__exception_1_1_socket_exception_1a055df1ec945a77de0c750399b38e1ed6">00035</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1a055df1ec945a77de0c750399b38e1ed6">fd</link>;
<anchor xml:id="__socket_exception_8hpp_source_1l00036"/>00036 
<anchor xml:id="__socket_exception_8hpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="__socket_exception_8hpp_source_1l00038"/><link linkend="_classjpl_1_1__exception_1_1_socket_exception_1add1eac013e3ef1edf91d71f3b11a2638">00038</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1add1eac013e3ef1edf91d71f3b11a2638">SocketException</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1a055df1ec945a77de0c750399b38e1ed6">fd</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1adc56852307aceab48ef989e21bf9325c">error_code</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1a8a40d27a336fcfeb26e7fd7b6c8522ec">msg</link>)&#32;:&#32;<link linkend="_classjpl_1_1__exception_1_1_runtime_exception">RuntimeException</link>(<emphasis role="stringliteral">&quot;SocketException&quot;</emphasis>,&#32;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1a8a40d27a336fcfeb26e7fd7b6c8522ec">msg</link>),&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1adc56852307aceab48ef989e21bf9325c">error_code</link>(<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1adc56852307aceab48ef989e21bf9325c">error_code</link>),&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1a055df1ec945a77de0c750399b38e1ed6">fd</link>(<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1a055df1ec945a77de0c750399b38e1ed6">fd</link>){}
<anchor xml:id="__socket_exception_8hpp_source_1l00039"/><link linkend="_classjpl_1_1__exception_1_1_socket_exception_1a20e5523f0f6fe3d0484aea9a5fb54320">00039</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1a20e5523f0f6fe3d0484aea9a5fb54320">SocketException</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1a055df1ec945a77de0c750399b38e1ed6">fd</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1adc56852307aceab48ef989e21bf9325c">error_code</link>)&#32;:&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception">SocketException</link>(<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1a055df1ec945a77de0c750399b38e1ed6">fd</link>,&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1adc56852307aceab48ef989e21bf9325c">error_code</link>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>){
<anchor xml:id="__socket_exception_8hpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;msg_s&#32;=&#32;jpl::_utils::_error::_GetLastErrorAsString(this-&gt;error_code);&#32;
<anchor xml:id="__socket_exception_8hpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1a8a40d27a336fcfeb26e7fd7b6c8522ec">msg</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>[msg_s.size()];
<anchor xml:id="__socket_exception_8hpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy((<emphasis role="keywordtype">char</emphasis>*)this-&gt;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1a8a40d27a336fcfeb26e7fd7b6c8522ec">msg</link>,&#32;msg_s.c_str(),&#32;msg_s.size());
<anchor xml:id="__socket_exception_8hpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__socket_exception_8hpp_source_1l00044"/><link linkend="_classjpl_1_1__exception_1_1_socket_exception_1ab8ea35201c19d524ee061ffa474f6c8a">00044</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1ab8ea35201c19d524ee061ffa474f6c8a">SocketException</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1a055df1ec945a77de0c750399b38e1ed6">fd</link>)&#32;:&#32;<link linkend="_classjpl_1_1__exception_1_1_runtime_exception">RuntimeException</link>(<emphasis role="stringliteral">&quot;SocketException&quot;</emphasis>,&#32;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1a8a40d27a336fcfeb26e7fd7b6c8522ec">msg</link>){
<anchor xml:id="__socket_exception_8hpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;error_code&#32;=&#32;jpl::_utils::_error::_GetLastError();
<anchor xml:id="__socket_exception_8hpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;msg_s&#32;=&#32;jpl::_utils::_error::_GetLastErrorAsString(this-&gt;error_code);&#32;
<anchor xml:id="__socket_exception_8hpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1a8a40d27a336fcfeb26e7fd7b6c8522ec">msg</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>[msg_s.size()];
<anchor xml:id="__socket_exception_8hpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy((<emphasis role="keywordtype">char</emphasis>*)this-&gt;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1a8a40d27a336fcfeb26e7fd7b6c8522ec">msg</link>,&#32;msg_s.c_str(),&#32;msg_s.size());
<anchor xml:id="__socket_exception_8hpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__socket_exception_8hpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__socket_exception_8hpp_source_1l00051"/><link linkend="_classjpl_1_1__exception_1_1_socket_exception_1abd14ed90cb038701b335bc72fa8eeb4d">00051</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classjpl_1_1__exception_1_1_socket_exception_1abd14ed90cb038701b335bc72fa8eeb4d">what</link>()&#32;const&#32;_GLIBCXX_TXN_SAFE_DYN&#32;_GLIBCXX_NOTHROW<emphasis role="keyword">&#32;override</emphasis>{
<anchor xml:id="__socket_exception_8hpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;buffer&#32;=&#32;
<anchor xml:id="__socket_exception_8hpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string(this-&gt;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1add4642360b0286f49d367e431b6473fa">type_ex</link>)&#32;+&#32;<emphasis role="stringliteral">&quot;:&#32;FD(&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;std::to_string(this-&gt;fd)&#32;+&#32;
<anchor xml:id="__socket_exception_8hpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;)&#32;Code(&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;+&#32;std::to_string(this-&gt;error_code)&#32;+&#32;
<anchor xml:id="__socket_exception_8hpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;)&#32;-&gt;&#32;&quot;</emphasis>&#32;+&#32;std::string(this-&gt;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1a8a40d27a336fcfeb26e7fd7b6c8522ec">msg</link>);
<anchor xml:id="__socket_exception_8hpp_source_1l00056"/>00056 
<anchor xml:id="__socket_exception_8hpp_source_1l00057"/>00057 
<anchor xml:id="__socket_exception_8hpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;c_buffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>[buffer.size()];
<anchor xml:id="__socket_exception_8hpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(c_buffer,&#32;buffer.c_str(),&#32;buffer.size());
<anchor xml:id="__socket_exception_8hpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c_buffer;
<anchor xml:id="__socket_exception_8hpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__socket_exception_8hpp_source_1l00062"/>00062 
<anchor xml:id="__socket_exception_8hpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__socket_exception_8hpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;}
<anchor xml:id="__socket_exception_8hpp_source_1l00065"/>00065 }
<anchor xml:id="__socket_exception_8hpp_source_1l00066"/>00066 
<anchor xml:id="__socket_exception_8hpp_source_1l00067"/>00067 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
