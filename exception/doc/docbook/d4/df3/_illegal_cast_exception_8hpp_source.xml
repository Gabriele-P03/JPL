<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__illegal_cast_exception_8hpp_source" xml:lang="en-US">
<title>IllegalCastException.hpp</title>
<indexterm><primary>src/runtime/IllegalCastException.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__illegal_cast_exception_8hpp_source_1l00001"/>00001 
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00010"/>00010 <emphasis role="preprocessor">#ifndef&#32;ILLEGAL_CAST_EXCEPTION_JPL</emphasis>
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00011"/>00011 <emphasis role="preprocessor">#define&#32;ILLEGAL_CAST_EXCEPTION_JPL</emphasis>
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00012"/>00012 
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__runtime_exception_8hpp">RuntimeException.hpp</link>&quot;</emphasis>
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00014"/>00014 
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00015"/>00015 
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00016"/>00016 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacejpl">jpl</link>{
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00017"/>00017 
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>_exception{
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00019"/>00019 
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00020"/><link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception">00020</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception">IllegalCastException</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classjpl_1_1__exception_1_1_runtime_exception">RuntimeException</link>{
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00021"/>00021 
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00023"/>00023 
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00027"/><link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a2e3954ae4c72f6de28721a24b05efb24">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a2e3954ae4c72f6de28721a24b05efb24">_cast_attempted</link>;
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00031"/><link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1af3222a274e7ab611982066a2d9af3005">00031</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1af3222a274e7ab611982066a2d9af3005">_cast_needed</link>;
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00034"/>00034 
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00035"/><link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1aad5c886977daa0d3e8d64fe3dc6755d7">00035</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1aad5c886977daa0d3e8d64fe3dc6755d7">IllegalCastException</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a2e3954ae4c72f6de28721a24b05efb24">_cast_attempted</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1af3222a274e7ab611982066a2d9af3005">_cast_needed</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1a8a40d27a336fcfeb26e7fd7b6c8522ec">msg</link>)&#32;:&#32;
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classjpl_1_1__exception_1_1_runtime_exception">RuntimeException</link>(<emphasis role="stringliteral">&quot;IllegalCastException&quot;</emphasis>,&#32;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1a8a40d27a336fcfeb26e7fd7b6c8522ec">msg</link>),&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a2e3954ae4c72f6de28721a24b05efb24">_cast_attempted</link>(<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a2e3954ae4c72f6de28721a24b05efb24">_cast_attempted</link>),&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1af3222a274e7ab611982066a2d9af3005">_cast_needed</link>(<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1af3222a274e7ab611982066a2d9af3005">_cast_needed</link>){}
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00037"/><link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a3e46e9adbe20068ce4945b68263ca536">00037</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a3e46e9adbe20068ce4945b68263ca536">IllegalCastException</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a2e3954ae4c72f6de28721a24b05efb24">_cast_attempted</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1af3222a274e7ab611982066a2d9af3005">_cast_needed</link>)&#32;:&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception">IllegalCastException</link>(<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a2e3954ae4c72f6de28721a24b05efb24">_cast_attempted</link>,&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1af3222a274e7ab611982066a2d9af3005">_cast_needed</link>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>){}
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00038"/><link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a77112ac7db37854409a7dff150ea142c">00038</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a77112ac7db37854409a7dff150ea142c">IllegalCastException</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1a8a40d27a336fcfeb26e7fd7b6c8522ec">msg</link>)&#32;:&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception">IllegalCastException</link>(<emphasis role="stringliteral">&quot;UNKNOWN&quot;</emphasis>&#32;,<emphasis role="stringliteral">&quot;UNKNOWN&quot;</emphasis>,&#32;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1a8a40d27a336fcfeb26e7fd7b6c8522ec">msg</link>){}
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00039"/><link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a474cca17d3db27c915b12b73838c318a">00039</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a474cca17d3db27c915b12b73838c318a">IllegalCastException</link>()&#32;:&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception">IllegalCastException</link>(<emphasis role="stringliteral">&quot;&quot;</emphasis>){}
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00040"/>00040 
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00041"/><link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a1a3a798cacf8456d77cd291b32c33e01">00041</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classjpl_1_1__exception_1_1_illegal_cast_exception_1a1a3a798cacf8456d77cd291b32c33e01">what</link>()&#32;const&#32;_GLIBCXX_TXN_SAFE_DYN&#32;_GLIBCXX_NOTHROW<emphasis role="keyword">&#32;override</emphasis>{
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;buffer&#32;=&#32;
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string(this-&gt;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1add4642360b0286f49d367e431b6473fa">type_ex</link>)&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;Attempted&#32;Cast:&#32;&quot;</emphasis>&#32;+&#32;std::string(this-&gt;_cast_attempted)&#32;+
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;Required&#32;Cast:&#32;&quot;</emphasis>&#32;+&#32;std::string(this-&gt;_cast_needed)&#32;+&#32;
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;std::string(this-&gt;<link linkend="_classjpl_1_1__exception_1_1_abstract_exception_1a8a40d27a336fcfeb26e7fd7b6c8522ec">msg</link>);
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00046"/>00046 
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00047"/>00047 
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;c_buffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>[buffer.size()];
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(c_buffer,&#32;buffer.c_str(),&#32;buffer.size());
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c_buffer;
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;}
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00054"/>00054 }
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00055"/>00055 
<anchor xml:id="__illegal_cast_exception_8hpp_source_1l00056"/>00056 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
