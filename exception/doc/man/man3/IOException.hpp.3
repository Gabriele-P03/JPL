.TH "src/runtime/IOException.hpp" 3Version 1.0.0" "Exception" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/runtime/IOException.hpp
.SH SYNOPSIS
.br
.PP
\fC#include 'RuntimeException\&.hpp'\fP
.br
\fC#include <jpl/utils/debug/ErrorUtils\&.hpp>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "class \fBjpl::_exception::IOException\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBjpl\fP"
.br
.ti -1c
.RI "namespace \fBjpl::_exception\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
An IOException is thrown when an error is occurred in runtime during an I/O operation either on a socket or a file
.PP
It is able to catch the last error occurred via _utils::_error::_GetLastError() if you instance via the default constructor; it even get the description of the error code via _utils::_error::_GetLastErrorAsString(unsigned int)
.PP
\fBDate\fP
.RS 4
2023-08-01 
.RE
.PP
\fBCopyright\fP
.RS 4
Copyright (c) 2023 
.RE
.PP
\fBAuthor\fP
.RS 4
Gabriele-P03 
.RE
.PP

.PP
Definition in file \fBIOException\&.hpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Exception from the source code\&.
